package mybatis.plugins;

import com.fasterxml.jackson.databind.ObjectMapper;
import org.mybatis.generator.api.FullyQualifiedTable;
import org.mybatis.generator.api.IntrospectedTable;
import org.mybatis.generator.api.PluginAdapter;
import org.mybatis.generator.api.dom.xml.Document;
import org.mybatis.generator.api.dom.xml.Element;
import org.mybatis.generator.api.dom.xml.TextElement;
import org.mybatis.generator.api.dom.xml.XmlElement;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by Beeant on 2016/2/13.
 */
public class AliasDeletedPlugin extends PluginAdapter {
    private String alias;
    private String deletedValue;

    private Map<FullyQualifiedTable, List<XmlElement>> elementsToAdd;

    private Logger logger = LoggerFactory.getLogger(this.getClass());

    public AliasDeletedPlugin() {
        elementsToAdd = new HashMap<FullyQualifiedTable, List<XmlElement>>();
    }


    @Override
    public boolean validate(List<String> warnings) {
        alias = properties.getProperty("column");
        deletedValue = properties.getProperty("value");
        return true;
    }

    /**
     * We'll override this method and add any new elements generated by
     * previous calls
     */
    @Override
    public boolean sqlMapDocumentGenerated(Document document,
                                           IntrospectedTable introspectedTable) {
        List<XmlElement> elements = elementsToAdd.get(introspectedTable.getFullyQualifiedTable());
        if (elements != null) {
            for (XmlElement element : elements) {
                document.getRootElement().addElement(element);
            }
        }

        return true;
    }

    @Override
    public boolean sqlMapDeleteByExampleElementGenerated(XmlElement element, IntrospectedTable introspectedTable) {
        if (introspectedTable.getTargetRuntime() == IntrospectedTable.TargetRuntime.MYBATIS3) {
            generateDeleteSql(element, introspectedTable);
        }

        return true;
    }

    @Override
    public boolean sqlMapDeleteByPrimaryKeyElementGenerated(XmlElement element, IntrospectedTable introspectedTable) {
        if (introspectedTable.getTargetRuntime() == IntrospectedTable.TargetRuntime.MYBATIS3) {
            generateDeleteSql(element, introspectedTable);
        }
        return true;
    }

    private void generateDeleteSql(XmlElement element, IntrospectedTable introspectedTable) {
        ObjectMapper mapper = new ObjectMapper();
        element.setName("update");
        boolean isComments = true;
        int commentIdx = 6;
        int elSize = element.getElements().size();
        if (elSize < 6) {
            commentIdx = 0;
            isComments = false;
        }
        List<Element> elements = new ArrayList<Element>();
        for (int i = 0; i < commentIdx; i++) {
            elements.add(element.getElements().get(i));
        }
        Element delSql = new TextElement("update " + introspectedTable.getFullyQualifiedTable().toString());
        elements.add(delSql);
        elements.add(new TextElement("set ".concat(alias).concat(" = \"").concat(deletedValue).concat("\"")));

        for (int i = commentIdx + 1; i < elSize; i++) {
            elements.add(element.getElements().get(i));
        }

        //elements.add(new TextElement("update ".concat(introspectedTable.getFullyQualifiedTable().toString())));
        //elements.add(new TextElement("set ".concat(alias).concat(" = \"").concat(deletedValue).concat("\"")));
        //elements.add(ifElement);
        element.setElements(elements);

    }
}
